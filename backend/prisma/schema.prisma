// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @unique @id @default(autoincrement())
  name  String  
  funcao  String  
  chamadosfuncionario Chamado[] @relation("ChamadoTecnico")
  chamadostecnico Chamado[] @relation("ChamadoFuncionario")
  notificacoes Notificacao[] @relation("Notificacao")
}

model Setor{
  id Int @unique @id @default(autoincrement())
  name  String  
  maquinas Maquina[]
}

model Maquina{
  id Int @unique @id @default(autoincrement())
  descricao String  
  dataCompra DateTime
  setor Setor @relation(fields: [setorId], references: [id])
  setorId Int 
  ferramentas Ferramenta[]
  chamados Chamado[]
}

model Ferramenta {
  id Int @unique @id @default(autoincrement())
  descricao String  
  dataCompra DateTime
  maquina Maquina @relation(fields: [maquinaId], references: [id])
  maquinaId Int 
}

model Chamado {
  id Int @unique @id @default(autoincrement())
  descricao String  
  data DateTime
  status String
  feedback String
  descResolucao String
  dataFechamento DateTime
  tecnico User @relation("ChamadoTecnico", fields: [tecnicoId], references: [id])
  tecnicoId Int @unique
  funcionario User @relation("ChamadoFuncionario", fields: [funcionarioId], references: [id])
  funcionarioId Int
  maquina Maquina @relation(fields: [maquinaId], references: [id])
  maquinaId Int 
  notificacoes Notificacao[]
}

model Notificacao {
  id Int @unique @id @default(autoincrement())  
  data DateTime
  remetente User @relation("Notificacao", fields: [remetenteId], references: [id])
  remetenteId Int
  chamado Chamado @relation(fields: [chamadoId], references: [id])
  chamadoId Int
}